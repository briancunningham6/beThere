{
  "name": "mocha-server",
  "version": "0.2.0",
  "description": "Serves up your mocha tests in web-pages so you can test them in browser.",
  "main": "index.js",
  "bin": {
    "mocha-server": "./bin/mocha-server"
  },
  "scripts": {
    "test": "cake test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/carbonfive/mocha-server.git"
  },
  "keywords": [
    "mocha",
    "test",
    "browser",
    "runner",
    "phantomjs",
    "server"
  ],
  "author": {
    "name": "Carbon Five"
  },
  "contributors": [
    {
      "name": "Rudy Jahchan",
      "email": "rudy@carbonfive.com"
    },
    {
      "name": "Andy Peterson",
      "email": "andy@ndpsoftware.com"
    },
    {
      "name": "Hugo Melo",
      "email": "hugo@carbonfive.com"
    }
  ],
  "dependencies": {
    "coffee-script": "1.4.x",
    "express": "3.1.x",
    "mocha": "1.8.x",
    "jade": "0.28.x",
    "commander": "1.1.x",
    "connect-file-cache": "0.2.x",
    "snockets": "1.3.x",
    "mocha-phantomjs": "2.0.x",
    "chai": "~1.5.0",
    "sinon": "~1.5.2"
  },
  "license": "BSD",
  "readmeFilename": "README.md",
  "readme": "# mocha-server\n\nRun your front-end [mocha][mocha] tests where they belong; in the browser! Much like [jasmine-gem][jasmine-gem], \n<code>mocha-server</code> serves up your Mocha suite in a web page so you don't have to spend time writing HTML\ntest runners and can focus on the code itself. You can even run them \nthem headlessly with [mocha-phamtomjs][mocha-phantomjs] so they can  be part of your build\nprocess!\n\n## Installation\n\n```sh\nnpm install mocha-server\n```\n\n## Usage\n\nIn its simplest form, you run <code>mocha-server</code> from the\ncommand-line:\n\n```sh\n$ mocha-server\n```\n\nThis will launch a server that can be accessed at http://localhost:8888\n; open it with a browser to run the mounted tests.\n\nThe following flags can also be used:\n\n```sh\n  Usage: mocha-server [options]\n\n  Options:\n\n    --help               output usage information\n    -V, --version            output the version number\n    -r, --require <name>     require the given module\n    -R, --reporter <name>    specify the reporter to use\n    -u, --ui <name>          specify user-interface (bdd|tdd|exports)\n    -b, --bail               bail after first test failure\n    -h, --headless           run headless with phantomjs\n    -c, --compilers <name>   pass in [ext]:[path to compiler]\n    --agent <userAgent>      specify the user agent to use\n    --cookie <name>=<value>  specify cookie\n    --header <name>=<value>  specify custom header\n    --setting <key>=<value>  specify specific phantom settings\n    --view <width>x<height>  specify phantom viewport size\n    --ignore-leaks           ignore global variable leaks\n    --recursive              include sub directories\n```\n\nBy default, tests are pulled in from the <code>test</code> directory.\n\n### Load Order\n\nAs dependencies can be very important in running Javascripts code and tests,\n<code>mocha-server</code> provides two mechanisms for ensuring the load\norder.\n\n#### <code>--require</code>\n\nFirst, the <code>--require</code> or <code>-r</code> flags can be used\nrepeatedly to identify files that should be loaded first. For example:\n\n```sh\n$ mocha-server -r ./test/test-helper.js ./test/my-tests\n```\n\nWill load <code>./test/test-helper.js</code> before it loads any of the\ntests found uncer <code>./test/my-tests</code>.\n\n#### Sprocket-style <code>require</code>\n\nAlternatively, you can use [sprockets][sprockets] style\n<code>require</code> directives to indicate depdencies. This\nfunctionality is supplied by [snockets][snockets].\n\n#### Adding Additional Javascript Compilers\n\nOut of the box, <code>mocha-server</code> supports Javascript and\n[coffeescript][coffeescript] files through [snockets][snockets]. You can\npass in additional compilers through the <code>--compiler</code flag as\nfollows:\n\n```sh\n$ mocha-server --compiler jade:./test/compilers/jade.js\n```\n\nWill compile all files with the <code>.jade</code> extension using the\ncompiler defined in <code>./test/compilers/jade.js</code>.\n\nA compiler is made up of a <code>match</code> property that is\nregular-expression that indicates the files type returned and a\n<code>compileSync</code> function that will return the source generated.\n\nLook under the <code>spec/support</code> for an example compiler.\n\n### <code>mocha-server.opts</code>\n\nMuch like [mocha][mocha] will attempt to load\n<code>./test/mocha.opts</code>, <code>mocha-server</code> will attempt\nto load <code>./test/mocha-server.opts</code>, concatenating the\narguments to those passed on the command line. For example, suppose you\nhave the following:\n\n```\n--require ./test/support\n-h\ntest/assets\n```\n\nIt will ensure the contents of <code>test/support</code> is loaded\nfirst, that the tests are run headlessly, and that all the tests in\n<code>test/assets</code> are run.\n\n### Running Headlessly\n\n<code>mocha-server</code> uses [mocha-phantomjs][mocha-phantomjs] to run\nheadlessly. You need to install [PhantomJS v.1.7.0][phantomjs] or\ngreater and then you can enter:\n\n```sh\n$ mocha-server --headless\n```\n\nOr:\n\n```sh\n$ mocha-server -h\n```\n\nThis launches the server, then runs <code>mocha-phantomjs</code>\nagainst it. Several command-line arguments are passed through to it.\n\n## Examples\n\nThe files under <code>test</code> folder provide examples of writing\ntests for the system. You can run them by:\n\n```sh\n$ mocha-server\n```\n\n## Contributing\n\nFork the repo, make a branch, add tests, make your changes, and submit a pull-request!\n\n### Testing\n\nYou can test <code>mocha-server</code> by cloning this repository and\nrunning:\n\n```sh\n$ cake test\n```\n\nThis will run the tests under the <code>spec</code> folder.\n\n## Contributors\n\n* [Rudy Jahchan][rudy-jahchan]\n* [Hugo Melo][squanto]\n* [Andrew Peterson][ndp]\n\n  [ndp]: http://github.com/ndp\n  [squanto]: http://github.com/squanto\n  [rudy-jahchan]: http://github.com/rudyjahchan\n  [mocha-server]: http://github.com/carbonfive/mocha-server\n  [mocha]: http://visionmedia.github.com/mocha/\n  [mocha-phantomjs]: https://github.com/metaskills/mocha-phantomjs\n  [phantomjs]: http://phantomjs.org/\n  [sprockets]: https://github.com/sstephenson/sprockets\n  [snockets]: https://github.com/TrevorBurnham/snockets\n  [coffeescript]: http://coffeescript.org/\n",
  "bugs": {
    "url": "https://github.com/carbonfive/mocha-server/issues"
  },
  "_id": "mocha-server@0.2.0",
  "dist": {
    "shasum": "74360d165307b8b4fe9e4f9f817f0895792fdef0"
  },
  "_from": "mocha-server@",
  "_resolved": "https://registry.npmjs.org/mocha-server/-/mocha-server-0.2.0.tgz"
}
